{"ast":null,"code":"var _jsxFileName = \"/Users/andreluizbranco/Desktop/react_IGTI/compostos/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Form from './components/Form';\nimport Installments from './components/Installments';\nexport default function App() {\n  const [initialValue, setInitalValue] = useState(1000);\n  const [monthlyInterest, setMonthlyInterest] = useState(1);\n  const [monthlyPeriod, setMonthyPeriod] = useState(1000);\n  const [installments, setInstallments] = useState([]);\n  useEffect(() => {\n    calculateInterest(initialValue, monthlyInterest, monthlyPeriod);\n  }, [initialValue, monthlyInterest, monthlyPeriod]);\n\n  const calculateInterest = (initialValue, monthlyInterest, monthlyPeriod) => {\n    const newInstallments = [];\n    let currentId = 1;\n    let currentValue = initialValue;\n    let percentage = 0;\n\n    for (let i = 1; i <= monthlyPeriod; i++) {\n      const percentValue = currentValue * Math.abs(monthlyInterest) / 100;\n      currentValue = monthlyInterest >= 0 ? currentValue + percentValue : currentValue - percentValue;\n      percentage = (currentValue / initialValue - 1) * 100;\n      newInstallments.push({\n        id: currentId++,\n        value: currentValue,\n        difference: currentValue - initialValue,\n        percentage,\n        profit: monthlyInterest > 0\n      });\n    }\n\n    setInstallments(newInstallments);\n  };\n\n  const handleChangeData = (newValue, newInterest, newPeriod) => {\n    if (newValue !== null) {\n      setInitalValue(newValue);\n      return;\n    }\n\n    if (newInterest !== null) {\n      setMonthlyInterest(newInterest);\n      return;\n    }\n\n    setMonthyPeriod(newPeriod);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Juros Compostos\"), /*#__PURE__*/React.createElement(Form, {\n    data: {\n      initialValue,\n      monthlyInterest,\n      monthlyPeriod\n    },\n    onChangeData: handleChangeData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Installments, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/andreluizbranco/Desktop/react_IGTI/compostos/src/App.js"],"names":["React","useEffect","useState","Form","Installments","App","initialValue","setInitalValue","monthlyInterest","setMonthlyInterest","monthlyPeriod","setMonthyPeriod","installments","setInstallments","calculateInterest","newInstallments","currentId","currentValue","percentage","i","percentValue","Math","abs","push","id","value","difference","profit","handleChangeData","newValue","newInterest","newPeriod"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACC,YAAD,EAAeC,cAAf,IAAiCL,QAAQ,CAAC,IAAD,CAA/C;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACQ,aAAD,EAAgBC,eAAhB,IAAmCT,QAAQ,CAAC,IAAD,CAAjD;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,iBAAiB,CAACR,YAAD,EAAeE,eAAf,EAAgCE,aAAhC,CAAjB;AACD,GAFQ,EAEN,CAACJ,YAAD,EAAeE,eAAf,EAAgCE,aAAhC,CAFM,CAAT;;AAIA,QAAMI,iBAAiB,GAAG,CAACR,YAAD,EAAeE,eAAf,EAAgCE,aAAhC,KAAkD;AAC1E,UAAMK,eAAe,GAAG,EAAxB;AAEA,QAAIC,SAAS,GAAG,CAAhB;AACA,QAAIC,YAAY,GAAGX,YAAnB;AACA,QAAIY,UAAU,GAAG,CAAjB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIT,aAArB,EAAoCS,CAAC,EAArC,EAAyC;AACvC,YAAMC,YAAY,GAAIH,YAAY,GAAGI,IAAI,CAACC,GAAL,CAASd,eAAT,CAAhB,GAA6C,GAAlE;AAEAS,MAAAA,YAAY,GACVT,eAAe,IAAI,CAAnB,GACIS,YAAY,GAAGG,YADnB,GAEIH,YAAY,GAAGG,YAHrB;AAIAF,MAAAA,UAAU,GAAG,CAACD,YAAY,GAAGX,YAAf,GAA8B,CAA/B,IAAoC,GAAjD;AAEAS,MAAAA,eAAe,CAACQ,IAAhB,CAAqB;AACnBC,QAAAA,EAAE,EAAER,SAAS,EADM;AAEnBS,QAAAA,KAAK,EAAER,YAFY;AAGnBS,QAAAA,UAAU,EAAET,YAAY,GAAGX,YAHR;AAInBY,QAAAA,UAJmB;AAKnBS,QAAAA,MAAM,EAAEnB,eAAe,GAAG;AALP,OAArB;AAOD;;AAEDK,IAAAA,eAAe,CAACE,eAAD,CAAf;AACD,GA1BD;;AA4BA,QAAMa,gBAAgB,GAAG,CAACC,QAAD,EAAWC,WAAX,EAAwBC,SAAxB,KAAsC;AAC7D,QAAIF,QAAQ,KAAK,IAAjB,EAAuB;AACrBtB,MAAAA,cAAc,CAACsB,QAAD,CAAd;AACA;AACD;;AACD,QAAIC,WAAW,KAAK,IAApB,EAA0B;AACxBrB,MAAAA,kBAAkB,CAACqB,WAAD,CAAlB;AACA;AACD;;AACDnB,IAAAA,eAAe,CAACoB,SAAD,CAAf;AACD,GAVD;;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AAAEzB,MAAAA,YAAF;AAAgBE,MAAAA,eAAhB;AAAiCE,MAAAA;AAAjC,KADR;AAEE,IAAA,YAAY,EAAEkB,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAME,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Form from './components/Form';\nimport Installments from './components/Installments';\n\nexport default function App() {\n  const [initialValue, setInitalValue] = useState(1000);\n  const [monthlyInterest, setMonthlyInterest] = useState(1);\n  const [monthlyPeriod, setMonthyPeriod] = useState(1000);\n  const [installments, setInstallments] = useState([]);\n\n  useEffect(() => {\n    calculateInterest(initialValue, monthlyInterest, monthlyPeriod);\n  }, [initialValue, monthlyInterest, monthlyPeriod]);\n\n  const calculateInterest = (initialValue, monthlyInterest, monthlyPeriod) => {\n    const newInstallments = [];\n\n    let currentId = 1;\n    let currentValue = initialValue;\n    let percentage = 0;\n\n    for (let i = 1; i <= monthlyPeriod; i++) {\n      const percentValue = (currentValue * Math.abs(monthlyInterest)) / 100;\n\n      currentValue =\n        monthlyInterest >= 0\n          ? currentValue + percentValue\n          : currentValue - percentValue;\n      percentage = (currentValue / initialValue - 1) * 100;\n\n      newInstallments.push({\n        id: currentId++,\n        value: currentValue,\n        difference: currentValue - initialValue,\n        percentage,\n        profit: monthlyInterest > 0,\n      });\n    }\n\n    setInstallments(newInstallments);\n  };\n\n  const handleChangeData = (newValue, newInterest, newPeriod) => {\n    if (newValue !== null) {\n      setInitalValue(newValue);\n      return;\n    }\n    if (newInterest !== null) {\n      setMonthlyInterest(newInterest);\n      return;\n    }\n    setMonthyPeriod(newPeriod);\n  };\n  return (\n    <div>\n      <h1>Juros Compostos</h1>\n      <Form\n        data={{ initialValue, monthlyInterest, monthlyPeriod }}\n        onChangeData={handleChangeData}\n      />\n      <Installments />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}